{
  "address": "0x2138a6a72f8C5AEe7BA0B0905aA0e6c1467aC8b7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        }
      ],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "code",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAccount",
          "type": "address"
        }
      ],
      "name": "GovSetCodeOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "code",
          "type": "bytes32"
        }
      ],
      "name": "RegisterCode",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "code",
          "type": "bytes32"
        }
      ],
      "name": "SetCodeOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevGov",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nextGov",
          "type": "address"
        }
      ],
      "name": "SetGov",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "handler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "SetHandler",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "discountShare",
          "type": "uint256"
        }
      ],
      "name": "SetReferrerDiscountShare",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tierId",
          "type": "uint256"
        }
      ],
      "name": "SetReferrerTier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tierId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalRebate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "discountShare",
          "type": "uint256"
        }
      ],
      "name": "SetTier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "code",
          "type": "bytes32"
        }
      ],
      "name": "SetTraderReferralCode",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "codeOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getTraderReferralInfo",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_code",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_newAccount",
          "type": "address"
        }
      ],
      "name": "govSetCodeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isHandler",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerDiscountShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerTiers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_code",
          "type": "bytes32"
        }
      ],
      "name": "registerCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_code",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_newAccount",
          "type": "address"
        }
      ],
      "name": "setCodeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_handler",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_discountShare",
          "type": "uint256"
        }
      ],
      "name": "setReferrerDiscountShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tierId",
          "type": "uint256"
        }
      ],
      "name": "setReferrerTier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tierId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalRebate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_discountShare",
          "type": "uint256"
        }
      ],
      "name": "setTier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_code",
          "type": "bytes32"
        }
      ],
      "name": "setTraderReferralCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_code",
          "type": "bytes32"
        }
      ],
      "name": "setTraderReferralCodeByUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tiers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalRebate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "discountShare",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "traderReferralCodes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa1fcfde2b6cd23bcbb87028d08589c060dd60393a71f96cec4572020006c0e7f",
  "receipt": {
    "to": null,
    "from": "0xFb11f15f206bdA02c224EDC744b0E50E46137046",
    "contractAddress": "0x2138a6a72f8C5AEe7BA0B0905aA0e6c1467aC8b7",
    "transactionIndex": 4,
    "gasUsed": "732790",
    "logsBloom": "0x
    "blockHash": "0xb86d29ceebe34a697d9f4f3b18fd20fe3a3ccf053dc356edf8aa8fbfb5ff63b2",
    "transactionHash": "0xa1fcfde2b6cd23bcbb87028d08589c060dd60393a71f96cec4572020006c0e7f",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 16614803,
        "transactionHash": "0xa1fcfde2b6cd23bcbb87028d08589c060dd60393a71f96cec4572020006c0e7f",
        "address": "0x2138a6a72f8C5AEe7BA0B0905aA0e6c1467aC8b7",
        "topics": [
          "0x53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fb11f15f206bda02c224edc744b0e50e46137046",
        "logIndex": 7,
        "blockHash": "0xb86d29ceebe34a697d9f4f3b18fd20fe3a3ccf053dc356edf8aa8fbfb5ff63b2"
      }
    ],
    "blockNumber": 16614803,
    "cumulativeGasUsed": "1206123",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "3a2ad2f76d49af012eff08ed5468f1c9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAccount\",\"type\":\"address\"}],\"name\":\"GovSetCodeOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"}],\"name\":\"RegisterCode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"}],\"name\":\"SetCodeOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevGov\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nextGov\",\"type\":\"address\"}],\"name\":\"SetGov\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"SetHandler\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"discountShare\",\"type\":\"uint256\"}],\"name\":\"SetReferrerDiscountShare\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"name\":\"SetReferrerTier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRebate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"discountShare\",\"type\":\"uint256\"}],\"name\":\"SetTier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"}],\"name\":\"SetTraderReferralCode\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"codeOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getTraderReferralInfo\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_code\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_newAccount\",\"type\":\"address\"}],\"name\":\"govSetCodeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isHandler\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerDiscountShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerTiers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_code\",\"type\":\"bytes32\"}],\"name\":\"registerCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_code\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_newAccount\",\"type\":\"address\"}],\"name\":\"setCodeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_handler\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_discountShare\",\"type\":\"uint256\"}],\"name\":\"setReferrerDiscountShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tierId\",\"type\":\"uint256\"}],\"name\":\"setReferrerTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tierId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRebate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_discountShare\",\"type\":\"uint256\"}],\"name\":\"setTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_code\",\"type\":\"bytes32\"}],\"name\":\"setTraderReferralCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_code\",\"type\":\"bytes32\"}],\"name\":\"setTraderReferralCodeByUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tiers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalRebate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discountShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"traderReferralCodes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/ReferralStorage.sol\":\"ReferralStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/gov/Governable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.0;\\n\\n// @title Governable\\n// @dev Contract to allow for governance restricted functions\\ncontract Governable {\\n    address public gov;\\n\\n    event SetGov(address prevGov, address nextGov);\\n\\n    error Unauthorized(address msgSender, string role);\\n\\n    constructor() {\\n        _setGov(msg.sender);\\n    }\\n\\n    modifier onlyGov() {\\n        if (msg.sender != gov) {\\n            revert Unauthorized(msg.sender, \\\"GOV\\\");\\n        }\\n        _;\\n    }\\n\\n    // @dev updates the gov value to the input _gov value\\n    // @param _gov the value to update to\\n    function setGov(address _gov) external onlyGov {\\n        _setGov(_gov);\\n    }\\n\\n    // @dev updates the gov value to the input _gov value\\n    // @param _gov the value to update to\\n    function _setGov(address _gov) internal {\\n        address prevGov = gov;\\n        gov = _gov;\\n\\n        emit SetGov(prevGov, _gov);\\n    }\\n}\\n\",\"keccak256\":\"0x3a7f4c36ac230d902ab66dcb36a0cd2cde8543df032608b19b35e617f3be8c0d\",\"license\":\"BUSL-1.1\"},\"contracts/mock/ReferralStorage.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../referral/IReferralStorage.sol\\\";\\nimport \\\"../gov/Governable.sol\\\";\\n\\n// @title ReferralStorage\\n// @dev Mock referral storage for testing and testnets\\ncontract ReferralStorage is IReferralStorage, Governable {\\n    uint256 public constant BASIS_POINTS = 10000;\\n\\n    // @dev mapping of affiliate to discount share for trader\\n    // this overrides the default value in the affiliate's tier\\n    mapping (address => uint256) public override referrerDiscountShares;\\n    // @dev mapping of affiliate to tier\\n    mapping (address => uint256) public override referrerTiers;\\n    // @dev mapping tier level to tier values\\n    mapping (uint256 => ReferralTier.Props) public override tiers;\\n\\n    // @dev handlers for access control\\n    mapping (address => bool) public isHandler;\\n\\n    // @dev mapping of referral code to affiliate\\n    mapping (bytes32 => address) public override codeOwners;\\n    // @dev mapping of trader to referral code\\n    mapping (address => bytes32) public override traderReferralCodes;\\n\\n    // @param handler the handler being set\\n    // @param isActive whether the handler is being set to active or inactive\\n    event SetHandler(address handler, bool isActive);\\n    // @param account address of the trader\\n    // @param code the referral code\\n    event SetTraderReferralCode(address account, bytes32 code);\\n    // @param tierId the tier level\\n    // @param totalRebate the total rebate for the tier (affiliate reward + trader discount)\\n    // @param discountShare the share of the totalRebate for traders\\n    event SetTier(uint256 tierId, uint256 totalRebate, uint256 discountShare);\\n    // @param referrer the affiliate\\n    // @param tierId the new tier level\\n    event SetReferrerTier(address referrer, uint256 tierId);\\n    // @param referrer the affiliate\\n    // @param discountShare the share of the totalRebate for traders\\n    event SetReferrerDiscountShare(address referrer, uint256 discountShare);\\n    // @param account the address of the affiliate\\n    // @param code the referral code\\n    event RegisterCode(address account, bytes32 code);\\n    // @param account the previous owner of the referral code\\n    // @param newAccount the new owner of the referral code\\n    // @param code the referral code\\n    event SetCodeOwner(address account, address newAccount, bytes32 code);\\n    // @param newAccount the new owner of the referral code\\n    // @param code the referral code\\n    event GovSetCodeOwner(bytes32 code, address newAccount);\\n\\n    modifier onlyHandler() {\\n        require(isHandler[msg.sender], \\\"ReferralStorage: forbidden\\\");\\n        _;\\n    }\\n\\n    // @dev set an address as a handler\\n    // @param _handler address of the handler\\n    // @param _isActive whether to set the handler as active or inactive\\n    function setHandler(address _handler, bool _isActive) external onlyGov {\\n        isHandler[_handler] = _isActive;\\n        emit SetHandler(_handler, _isActive);\\n    }\\n\\n    // @dev set values for a tier\\n    // @param _tierId the ID of the tier to set\\n    // @param _totalRebate the total rebate\\n    // @param _discountShare the discount share\\n    function setTier(uint256 _tierId, uint256 _totalRebate, uint256 _discountShare) external override onlyGov {\\n        require(_totalRebate <= BASIS_POINTS, \\\"ReferralStorage: invalid totalRebate\\\");\\n        require(_discountShare <= BASIS_POINTS, \\\"ReferralStorage: invalid discountShare\\\");\\n\\n        ReferralTier.Props memory tier = tiers[_tierId];\\n        tier.totalRebate = _totalRebate;\\n        tier.discountShare = _discountShare;\\n        tiers[_tierId] = tier;\\n        emit SetTier(_tierId, _totalRebate, _discountShare);\\n    }\\n\\n    // @dev set the tier for an affiliate\\n    // @param _referrer the address of the affiliate\\n    // @param _tierId the tier to set to\\n    function setReferrerTier(address _referrer, uint256 _tierId) external override onlyGov {\\n        referrerTiers[_referrer] = _tierId;\\n        emit SetReferrerTier(_referrer, _tierId);\\n    }\\n\\n    // @dev set the discount share for an affiliate\\n    // @param _discountShare the discount share to set to\\n    function setReferrerDiscountShare(uint256 _discountShare) external {\\n        require(_discountShare <= BASIS_POINTS, \\\"ReferralStorage: invalid discountShare\\\");\\n\\n        referrerDiscountShares[msg.sender] = _discountShare;\\n        emit SetReferrerDiscountShare(msg.sender, _discountShare);\\n    }\\n\\n    // @dev set the referral code for a trader\\n    // @param _account the address of the trader\\n    // @param _code the referral code to set to\\n    function setTraderReferralCode(address _account, bytes32 _code) external override onlyHandler {\\n        _setTraderReferralCode(_account, _code);\\n    }\\n\\n    // @dev set the referral code for a trader\\n    // @param _code the referral code to set to\\n    function setTraderReferralCodeByUser(bytes32 _code) external {\\n        _setTraderReferralCode(msg.sender, _code);\\n    }\\n\\n    // @dev register a referral code\\n    // @param _code the referral code to register\\n    function registerCode(bytes32 _code) external {\\n        require(_code != bytes32(0), \\\"ReferralStorage: invalid _code\\\");\\n        require(codeOwners[_code] == address(0), \\\"ReferralStorage: code already exists\\\");\\n\\n        codeOwners[_code] = msg.sender;\\n        emit RegisterCode(msg.sender, _code);\\n    }\\n\\n    // @dev for affiliates to set a new owner for a referral code they own\\n    // @param _code the referral code\\n    // @param _newAccount the new owner\\n    function setCodeOwner(bytes32 _code, address _newAccount) external {\\n        require(_code != bytes32(0), \\\"ReferralStorage: invalid _code\\\");\\n\\n        address account = codeOwners[_code];\\n        require(msg.sender == account, \\\"ReferralStorage: forbidden\\\");\\n\\n        codeOwners[_code] = _newAccount;\\n        emit SetCodeOwner(msg.sender, _newAccount, _code);\\n    }\\n\\n    // @dev set the owner of a referral code\\n    // @param _code the referral code\\n    // @param _newAccount the new owner\\n    function govSetCodeOwner(bytes32 _code, address _newAccount) external override onlyGov {\\n        require(_code != bytes32(0), \\\"ReferralStorage: invalid _code\\\");\\n\\n        codeOwners[_code] = _newAccount;\\n        emit GovSetCodeOwner(_code, _newAccount);\\n    }\\n\\n    // @dev get the referral info for a trader\\n    // @param _account the address of the trader\\n    function getTraderReferralInfo(address _account) external override view returns (bytes32, address) {\\n        bytes32 code = traderReferralCodes[_account];\\n        address referrer;\\n        if (code != bytes32(0)) {\\n            referrer = codeOwners[code];\\n        }\\n        return (code, referrer);\\n    }\\n\\n    // @dev set the referral code for a trader\\n    // @param _account the address of the trader\\n    // @param _code the referral code\\n    function _setTraderReferralCode(address _account, bytes32 _code) private {\\n        traderReferralCodes[_account] = _code;\\n        emit SetTraderReferralCode(_account, _code);\\n    }\\n}\\n\",\"keccak256\":\"0xcb782fbc529845603d7bdff554e90bd10d1f77dbce098771d11c9a227f325e40\",\"license\":\"BUSL-1.1\"},\"contracts/referral/IReferralStorage.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ReferralTier.sol\\\";\\n\\n// @title IReferralStorage\\n// @dev Interface for ReferralStorage\\ninterface IReferralStorage {\\n    // @dev get the owner of a referral code\\n    // @param _code the referral code\\n    // @return the owner of the referral code\\n    function codeOwners(bytes32 _code) external view returns (address);\\n    // @dev get the referral code of a trader\\n    // @param _account the address of the trader\\n    // @return the referral code\\n    function traderReferralCodes(address _account) external view returns (bytes32);\\n    // @dev get the trader discount share for an affiliate\\n    // @param _account the address of the affiliate\\n    // @return the trader discount share\\n    function referrerDiscountShares(address _account) external view returns (uint256);\\n    // @dev get the tier level of an affiliate\\n    // @param _account the address of the affiliate\\n    // @return the tier level of the affiliate\\n    function referrerTiers(address _account) external view returns (uint256);\\n    // @dev get the referral info for a trader\\n    // @param _account the address of the trader\\n    // @return (referral code, affiliate)\\n    function getTraderReferralInfo(address _account) external view returns (bytes32, address);\\n    // @dev set the referral code for a trader\\n    // @param _account the address of the trader\\n    // @param _code the referral code\\n    function setTraderReferralCode(address _account, bytes32 _code) external;\\n    // @dev set the values for a tier\\n    // @param _tierId the tier level\\n    // @param _totalRebate the total rebate for the tier (affiliate reward + trader discount)\\n    // @param _discountShare the share of the totalRebate for traders\\n    function setTier(uint256 _tierId, uint256 _totalRebate, uint256 _discountShare) external;\\n    // @dev set the tier for an affiliate\\n    // @param _tierId the tier level\\n    function setReferrerTier(address _referrer, uint256 _tierId) external;\\n    // @dev set the owner for a referral code\\n    // @param _code the referral code\\n    // @param _newAccount the new owner\\n    function govSetCodeOwner(bytes32 _code, address _newAccount) external;\\n\\n    // @dev get the tier values for a tier level\\n    // @param _tierLevel the tier level\\n    // @return (totalRebate, discountShare)\\n    function tiers(uint256 _tierLevel) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0x831c26a3575729b3ca9d4f743d586a49877bd947b7a167afcc81bd3d8fc06a26\",\"license\":\"BUSL-1.1\"},\"contracts/referral/ReferralTier.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.0;\\n\\n// @title ReferralTier\\n// @dev Struct for referral tiers\\nlibrary ReferralTier {\\n    // @param totalRebate the total rebate for the tier (affiliate reward + trader discount)\\n    // @param discountShare the share of the totalRebate for traders\\n    struct Props {\\n        uint256 totalRebate;\\n        uint256 discountShare;\\n    }\\n}\\n\",\"keccak256\":\"0xde652c7a4c1dc7935ff509b6acea68a22c80d8500ff72edf1ab51dba2f326a18\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b610080565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b610bd48061008f6000396000f3fe608060405234801561001057600080fd5b50600436106100f15760003560e01c8063039af9eb146100f657806312d43a51146101375780631582a0181461016257806336def2c8146101905780633fb8b323146101a557806346ea87af146101b8578063534ef883146101eb57806356b4b2ad1461020c57806371a6a7901461021f578063836a01871461023f57806385725b58146102525780639c8e2de9146102725780639cb7de4b14610285578063c8b3c46014610298578063cfad57a2146102c1578063dfcfa250146102d4578063e1e01bf3146102e7578063e1f1c4a7146102fa578063ed84313414610303575b600080fd5b61011d610104366004610979565b6003602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b60005461014a906001600160a01b031681565b6040516001600160a01b03909116815260200161012e565b6101826101703660046109ae565b60026020526000908152604090205481565b60405190815260200161012e565b6101a361019e366004610979565b610316565b005b6101a36101b33660046109d0565b61040a565b6101db6101c63660046109ae565b60046020526000908152604090205460ff1681565b604051901515815260200161012e565b6101fe6101f93660046109ae565b610490565b60405161012e9291906109fa565b6101a361021a3660046109d0565b6104d6565b61018261022d3660046109ae565b60016020526000908152604090205481565b6101a361024d366004610a11565b610513565b6101826102603660046109ae565b60066020526000908152604090205481565b6101a3610280366004610979565b61063c565b6101a3610293366004610a3d565b6106a0565b61014a6102a6366004610979565b6005602052600090815260409020546001600160a01b031681565b6101a36102cf3660046109ae565b610729565b6101a36102e2366004610a79565b610762565b6101a36102f5366004610979565b610805565b61018261271081565b6101a3610311366004610a79565b61080f565b8061033c5760405162461bcd60e51b815260040161033390610aa5565b60405180910390fd5b6000818152600560205260409020546001600160a01b0316156103ad5760405162461bcd60e51b8152602060048201526024808201527f526566657272616c53746f726167653a20636f646520616c72656164792065786044820152636973747360e01b6064820152608401610333565b6000818152600560205260409081902080546001600160a01b0319163390811790915590517f04f82286a2a3b2ee5c8555de8304dfe2ea70991613213184b73a9e408d2d8029916103ff918490610adc565b60405180910390a150565b6000546001600160a01b03163314610437573360405163a35b150b60e01b81526004016103339190610af5565b6001600160a01b03821660009081526002602052604090819020829055517f7696855cdbb94bb5a44cb0a95caff6f29173aa1cbfba193834b12b90827ce2bc906104849084908490610adc565b60405180910390a15050565b6001600160a01b03811660009081526006602052604081205481908181156104cc57506000818152600560205260409020546001600160a01b03165b9094909350915050565b3360009081526004602052604090205460ff166105055760405162461bcd60e51b815260040161033390610b24565b61050f82826108d2565b5050565b6000546001600160a01b03163314610540573360405163a35b150b60e01b81526004016103339190610af5565b61271082111561059e5760405162461bcd60e51b8152602060048201526024808201527f526566657272616c53746f726167653a20696e76616c696420746f74616c52656044820152636261746560e01b6064820152608401610333565b6127108111156105c05760405162461bcd60e51b815260040161033390610b58565b600083815260036020818152604080842081518083018352878152808401878152958990529383528351815593516001909401939093558251868152908101859052918201839052907f4ebd23a492b2bd79586cb57cae40d7793408265f20320f68b478b971e696f4c79060600160405180910390a150505050565b61271081111561065e5760405162461bcd60e51b815260040161033390610b58565b3360008181526001602052604090819020839055517fbd224f3917462b0fa80805fe3ec29be3a37f664955aad6224e5ece036224c429916103ff918490610adc565b6000546001600160a01b031633146106cd573360405163a35b150b60e01b81526004016103339190610af5565b6001600160a01b038216600081815260046020908152604091829020805460ff19168515159081179091558251938452908301527fd373464a39404e5f98fdb4b152b8ba9a094561e97e5c4b4ea11eb18cd9e6695e9101610484565b6000546001600160a01b03163314610756573360405163a35b150b60e01b81526004016103339190610af5565b61075f8161091f565b50565b6000546001600160a01b0316331461078f573360405163a35b150b60e01b81526004016103339190610af5565b816107ac5760405162461bcd60e51b815260040161033390610aa5565b6000828152600560205260409081902080546001600160a01b0319166001600160a01b038416179055517f6431f88c655dd0e2b8d09b6405c007c515c66d67f2998e69c902873a8c8f3e979061048490849084906109fa565b61075f33826108d2565b8161082c5760405162461bcd60e51b815260040161033390610aa5565b6000828152600560205260409020546001600160a01b03163381146108635760405162461bcd60e51b815260040161033390610b24565b60008381526005602090815260409182902080546001600160a01b0319166001600160a01b0386169081179091558251338152918201529081018490527f5640856798d41ce9ca0a109b54c20a06eb99ba9c36ab4547115dafb8473cf3979060600160405180910390a1505050565b6001600160a01b03821660009081526006602052604090819020829055517f43825f14567dda057e821be2e51a5aa79aa51f3907a647e3ed2bd486a01050f1906104849084908490610adc565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f7859101610484565b60006020828403121561098b57600080fd5b5035919050565b80356001600160a01b03811681146109a957600080fd5b919050565b6000602082840312156109c057600080fd5b6109c982610992565b9392505050565b600080604083850312156109e357600080fd5b6109ec83610992565b946020939093013593505050565b9182526001600160a01b0316602082015260400190565b600080600060608486031215610a2657600080fd5b505081359360208301359350604090920135919050565b60008060408385031215610a5057600080fd5b610a5983610992565b915060208301358015158114610a6e57600080fd5b809150509250929050565b60008060408385031215610a8c57600080fd5b82359150610a9c60208401610992565b90509250929050565b6020808252601e908201527f526566657272616c53746f726167653a20696e76616c6964205f636f64650000604082015260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039190911681526040602082018190526003908201526223a7ab60e91b606082015260800190565b6020808252601a90820152792932b332b93930b629ba37b930b3b29d103337b93134b23232b760311b604082015260600190565b60208082526026908201527f526566657272616c53746f726167653a20696e76616c696420646973636f756e60408201526574536861726560d01b60608201526080019056fea264697066735822122028dc427109dee750408c600c01d60f65115dcfba15bc64185d4681ab455ab8e064736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f15760003560e01c8063039af9eb146100f657806312d43a51146101375780631582a0181461016257806336def2c8146101905780633fb8b323146101a557806346ea87af146101b8578063534ef883146101eb57806356b4b2ad1461020c57806371a6a7901461021f578063836a01871461023f57806385725b58146102525780639c8e2de9146102725780639cb7de4b14610285578063c8b3c46014610298578063cfad57a2146102c1578063dfcfa250146102d4578063e1e01bf3146102e7578063e1f1c4a7146102fa578063ed84313414610303575b600080fd5b61011d610104366004610979565b6003602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b60005461014a906001600160a01b031681565b6040516001600160a01b03909116815260200161012e565b6101826101703660046109ae565b60026020526000908152604090205481565b60405190815260200161012e565b6101a361019e366004610979565b610316565b005b6101a36101b33660046109d0565b61040a565b6101db6101c63660046109ae565b60046020526000908152604090205460ff1681565b604051901515815260200161012e565b6101fe6101f93660046109ae565b610490565b60405161012e9291906109fa565b6101a361021a3660046109d0565b6104d6565b61018261022d3660046109ae565b60016020526000908152604090205481565b6101a361024d366004610a11565b610513565b6101826102603660046109ae565b60066020526000908152604090205481565b6101a3610280366004610979565b61063c565b6101a3610293366004610a3d565b6106a0565b61014a6102a6366004610979565b6005602052600090815260409020546001600160a01b031681565b6101a36102cf3660046109ae565b610729565b6101a36102e2366004610a79565b610762565b6101a36102f5366004610979565b610805565b61018261271081565b6101a3610311366004610a79565b61080f565b8061033c5760405162461bcd60e51b815260040161033390610aa5565b60405180910390fd5b6000818152600560205260409020546001600160a01b0316156103ad5760405162461bcd60e51b8152602060048201526024808201527f526566657272616c53746f726167653a20636f646520616c72656164792065786044820152636973747360e01b6064820152608401610333565b6000818152600560205260409081902080546001600160a01b0319163390811790915590517f04f82286a2a3b2ee5c8555de8304dfe2ea70991613213184b73a9e408d2d8029916103ff918490610adc565b60405180910390a150565b6000546001600160a01b03163314610437573360405163a35b150b60e01b81526004016103339190610af5565b6001600160a01b03821660009081526002602052604090819020829055517f7696855cdbb94bb5a44cb0a95caff6f29173aa1cbfba193834b12b90827ce2bc906104849084908490610adc565b60405180910390a15050565b6001600160a01b03811660009081526006602052604081205481908181156104cc57506000818152600560205260409020546001600160a01b03165b9094909350915050565b3360009081526004602052604090205460ff166105055760405162461bcd60e51b815260040161033390610b24565b61050f82826108d2565b5050565b6000546001600160a01b03163314610540573360405163a35b150b60e01b81526004016103339190610af5565b61271082111561059e5760405162461bcd60e51b8152602060048201526024808201527f526566657272616c53746f726167653a20696e76616c696420746f74616c52656044820152636261746560e01b6064820152608401610333565b6127108111156105c05760405162461bcd60e51b815260040161033390610b58565b600083815260036020818152604080842081518083018352878152808401878152958990529383528351815593516001909401939093558251868152908101859052918201839052907f4ebd23a492b2bd79586cb57cae40d7793408265f20320f68b478b971e696f4c79060600160405180910390a150505050565b61271081111561065e5760405162461bcd60e51b815260040161033390610b58565b3360008181526001602052604090819020839055517fbd224f3917462b0fa80805fe3ec29be3a37f664955aad6224e5ece036224c429916103ff918490610adc565b6000546001600160a01b031633146106cd573360405163a35b150b60e01b81526004016103339190610af5565b6001600160a01b038216600081815260046020908152604091829020805460ff19168515159081179091558251938452908301527fd373464a39404e5f98fdb4b152b8ba9a094561e97e5c4b4ea11eb18cd9e6695e9101610484565b6000546001600160a01b03163314610756573360405163a35b150b60e01b81526004016103339190610af5565b61075f8161091f565b50565b6000546001600160a01b0316331461078f573360405163a35b150b60e01b81526004016103339190610af5565b816107ac5760405162461bcd60e51b815260040161033390610aa5565b6000828152600560205260409081902080546001600160a01b0319166001600160a01b038416179055517f6431f88c655dd0e2b8d09b6405c007c515c66d67f2998e69c902873a8c8f3e979061048490849084906109fa565b61075f33826108d2565b8161082c5760405162461bcd60e51b815260040161033390610aa5565b6000828152600560205260409020546001600160a01b03163381146108635760405162461bcd60e51b815260040161033390610b24565b60008381526005602090815260409182902080546001600160a01b0319166001600160a01b0386169081179091558251338152918201529081018490527f5640856798d41ce9ca0a109b54c20a06eb99ba9c36ab4547115dafb8473cf3979060600160405180910390a1505050565b6001600160a01b03821660009081526006602052604090819020829055517f43825f14567dda057e821be2e51a5aa79aa51f3907a647e3ed2bd486a01050f1906104849084908490610adc565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f7859101610484565b60006020828403121561098b57600080fd5b5035919050565b80356001600160a01b03811681146109a957600080fd5b919050565b6000602082840312156109c057600080fd5b6109c982610992565b9392505050565b600080604083850312156109e357600080fd5b6109ec83610992565b946020939093013593505050565b9182526001600160a01b0316602082015260400190565b600080600060608486031215610a2657600080fd5b505081359360208301359350604090920135919050565b60008060408385031215610a5057600080fd5b610a5983610992565b915060208301358015158114610a6e57600080fd5b809150509250929050565b60008060408385031215610a8c57600080fd5b82359150610a9c60208401610992565b90509250929050565b6020808252601e908201527f526566657272616c53746f726167653a20696e76616c6964205f636f64650000604082015260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039190911681526040602082018190526003908201526223a7ab60e91b606082015260800190565b6020808252601a90820152792932b332b93930b629ba37b930b3b29d103337b93134b23232b760311b604082015260600190565b60208082526026908201527f526566657272616c53746f726167653a20696e76616c696420646973636f756e60408201526574536861726560d01b60608201526080019056fea264697066735822122028dc427109dee750408c600c01d60f65115dcfba15bc64185d4681ab455ab8e064736f6c63430008100033",
  "libraries": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11956,
        "contract": "contracts/mock/ReferralStorage.sol:ReferralStorage",
        "label": "gov",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 15616,
        "contract": "contracts/mock/ReferralStorage.sol:ReferralStorage",
        "label": "referrerDiscountShares",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15621,
        "contract": "contracts/mock/ReferralStorage.sol:ReferralStorage",
        "label": "referrerTiers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15627,
        "contract": "contracts/mock/ReferralStorage.sol:ReferralStorage",
        "label": "tiers",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Props)25892_storage)"
      },
      {
        "astId": 15631,
        "contract": "contracts/mock/ReferralStorage.sol:ReferralStorage",
        "label": "isHandler",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 15636,
        "contract": "contracts/mock/ReferralStorage.sol:ReferralStorage",
        "label": "codeOwners",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 15641,
        "contract": "contracts/mock/ReferralStorage.sol:ReferralStorage",
        "label": "traderReferralCodes",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bytes32)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_struct(Props)25892_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ReferralTier.Props)",
        "numberOfBytes": "32",
        "value": "t_struct(Props)25892_storage"
      },
      "t_struct(Props)25892_storage": {
        "encoding": "inplace",
        "label": "struct ReferralTier.Props",
        "members": [
          {
            "astId": 25889,
            "contract": "contracts/mock/ReferralStorage.sol:ReferralStorage",
            "label": "totalRebate",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 25891,
            "contract": "contracts/mock/ReferralStorage.sol:ReferralStorage",
            "label": "discountShare",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}